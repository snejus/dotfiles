cache_purge() {
    remove_file_folder f .coverage $1
    remove_file_folder d __pycache__ $1
    remove_file_folder d .pytest_cache $1
    remove_file_folder d .eggs $1
    remove_file_folder d build $1
    remove_file_folder d dist $1
    remove_file_folder d *.egg-info $1
    echo Finished removing caches
}

remove_file_folder() {
    count=0
    for file in $(find . -name $2 -type $1);
    do
        rm -rf $file $3
    let "count++"
    done
    if [ $count -gt 0 ]
    then
        echo "- Removed $count $2"
    fi
}

clog() {
    echo Looking for package $1 changelog
    dephell package changelog $1 | pygmentize -l rst -O style=monokai
}

dockerstop () {
    echo Killing every container which mentions $1
    docker ps --filter name=$1 | xargs -I{} docker stop {}
}

deps() {
    echo Generating a dependencies graph with pydeps for $1
    pydeps $1 --max-bacon 2 --include-missing --reverse -T png
}

rst2pdf() {
    filename=$1:t
    naked=$filename:r
    echo $naked
    echo Converting $filename to $naked.pdf
    pandoc $filename \
        -s \
        -f rst \
        -o $naked.pdf \
        -V geometry:margin=1.4in \
        --toc \
        --toc-depth 2 \
        --pdf-engine=xelatex \
        --highlight-style=$HOME/.ref/sarastango.theme
}

restshow() {
    echo About to open $1 in the browser
    restview --css ~/.ref/github.css $1
}

runmypy() {
    mypy $1 --html-report reports --show-traceback --pretty
}

show() {
    echo Looking for issue $1
    jira view $1 | pygmentize -l yaml -O style=fruity
}

RED='1;31'
GREEN='1;32'
YELLOW='1;33'
BLUE='1;34'
MAGENTA='1;35'
AQUA='1;36'
WHITE='1;37'
# BLUE='1;38' same blue
GREY='1;39'

search_skipped() {
    ag --nogroup --color --color-path $AQUA $1 tests src | \
        tee /dev/null | \
        sed 's/:.*//' | \
        tee >(wc -l) >(printf '\n\e[%smTOTAL: ' "$YELLOW") | \
        sort | uniq -c | sort -r
}

skipped_flake() {
    search_skipped 'noqa|flake8'
}

skipped_pylint() {
    search_skipped 'pylint: ?d'
}

skipped_mypy() {
    search_skipped 'type: ignore'
}

skipped_pylint_by_error() {
    ag --nogroup --color --color-path '1;36' 'pylint: ?dis' tests src | \
    tee /dev/null | \
    sed 's/.*able\ \?=\ \?//' | tr , '\n' | tr -d ' ' |
    tee >(wc -l) >(printf '\e[%smTOTAL: \e[%sm' $MAGENTA $GREY) | \
    sort | uniq -c | sort -rh
}
