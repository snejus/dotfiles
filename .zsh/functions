##### GENERAL #####

RED='1;31'
GREEN='1;32'
YELLOW='1;33'
BLUE='1;34'
MAGENTA='1;35'
AQUA='1;36'
WHITE='1;37'
# BLUE='1;38' same blue
GREY='1;39'


h() { howdoi $* -c -n 5 }
du_sort() { du -d 1 --si --all $1 | sort -h }
mcd () { mkdir $1; cd $1 }
locatel() { locate $@ | xargs exa -lah }
locateconf() { locate $1 | sed '/\.conf$/!d' }
whichl() { exa -lah "$(which $1)" }
shrinkmp4() { ffmpeg -i $1 -vcodec libx265 -crf 2 $2 }
unzipm () { unzip $1 -d $1:r }

show_mouse_color() {
    scrot --overwrite /tmp/copycolor.png
    eval $(xdotool getmouselocation --shell)
    IMAGE=`convert /tmp/copycolor.png -depth 8 -crop 1x1+$X+$Y txt:-`
    COLOR=`echo $IMAGE | grep -om1 '#\w\+'`
    echo -n $COLOR | xclip -i -selection CLIPBOARD

    awesome-client "\
    naughty = require(\"naughty\")\
    naughty.notify({\
    title=\"\tHello, wannabe designer\t\t \",\
    text=\"\tYour chosen color: $COLOR\",\
    timeout=10,\
    fg=\"$COLOR\",\
    bg=\"#FFFFFF\",\
    border_width=0,\
    position=\"bottom_middle\"})"

}

_newpassword () {
    bw generate -uln --length 30
}

bwgenpass () {
    copyq disable 2> /dev/null
    _newpassword | ci
    copyq enable 2> /dev/null
}

bwgetpass () {
    copyq disable 2> /dev/null
    bw get password $1 | ci
    copyq enable 2> /dev/null
}

bwcreate () {
    bw create $1 $(echo "$2" | bw encode)
}

bwcreatesecret () {
    bwcreate item "$(bw get template item | jq \
       ".folderId = $(bw get folder Secrets | jq .id) | \
        .name = \"$1\" | \
        .notes = \"$(base64 -w 0 $2)\" | \
        .login = \"\"")"
}

bwgetsecret () {
    base64 --decode <(bw get item $1 | jq '.notes' | tr -d \")
}

bwcreatelogin () {
    pw="$(_newpassword)"
    template="$(bw get template item)"
    bwcreate item "$template | jq \
       ".name = \"$1\" | \
        .login = {\"username\" = \"$2\", \"password\" = \"$pw\"}")"
    echo $pw | ci
}

dadjoke() {
   echo "\
$1$1$1$1$1$1$1$1$1$1$1$1$1$1$1$1$1
$1$2$1$2$1$1$2$1$1$2$1$2$1$1$2$1$1
$1$2$1$2$1$2$1$2$1$2$1$2$1$2$1$2$1
$1$2$2$2$1$2$2$2$1$2$2$2$1$2$2$2$1
$1$2$1$2$1$2$1$2$1$2$1$2$1$2$1$2$1
$1$2$1$2$1$2$1$2$1$2$1$2$1$2$1$2$1
$1$1$1$1$1$1$1$1$1$1$1$1$1$1$1$1$1"
}
dadjoke4sam() {
   echo "\
$1$1$1$1$1$1$1$1$1$1$1$1$1
$1$1$1$2$1$2$1$1$2$1$1$1$1
$1$1$1$2$1$2$1$2$1$2$1$1$1
$1$1$1$2$2$2$1$2$2$2$1$1$1
$1$1$1$2$1$2$1$2$1$2$1$1$1
$1$1$1$2$1$2$1$2$1$2$1$1$1
$1$1$1$1$1$1$1$1$1$1$1$1$1"
}


##### DOCKER #####

dockerstop () {
    echo Killing every container which mentions $1
    docker ps --filter name=$1 | xargs -I{} docker stop {}
}

docker_noname_image_ids() { docker images -a | grep "<none>" | tr -s ' ' | cut -d ' ' -f3 }
docker_delete_noname_images() { docker_noname_image_ids | xargs docker image rm }


##### GENERAL TEXT PROCESSING #####
flushright() { sed -e :a -e 's/^.\{1,78\}$/ &/;ta' }
center() { sed  -e :a -e 's/^.\{1,77\}$/ &/;ta' -e 's/\( *\)\1/\1/' }

##### CONVERSION BETWEEN FORMATS #####
rst2md() {
    local filename=$1:t
    local naked=$filename:r
    local output=$naked.md
    echo Converting $filename to $output
    pandoc $filename \
        -s \
        --from rst \
        --to gfm \
        -o $output \
        --toc \
        --toc-depth 2
}

pandoc2pdf() {
    local filename=$1:t
    local from=$2
    local naked=$filename:r
    local output=$naked.pdf
    echo Converting $filename to $output
    pandoc \
        -s \
        -f $from \
        -o $output \
        -V geometry:margin=1.4in \
        --toc \
        --toc-depth 2 \
        --pdf-engine=xelatex \
        --highlight-style=~/.d/sarastango.json \
        --variable=fontsize:10pt
}
rst2pdf() { pandoc2pdf $1 rst }
md2pdf() {
   local tmp="tmp$1"
   cat $1 | sed '/vim-markdown/,/vim-markdown/d' | # swap toc and remove dropdowns
      sed '/details\|summary/d' > $tmp
   pandoc2pdf $tmp gfm
   pandoc2pdf $1 gfm
   rm $tmp
}

function notify-emails-count () {
    /usr/bin/bash /home/sarunas/.config/notmuch/post-new
}
zle -N notify-emails-count
bindkey "^xm" notify-emails-count

# vim:ft=bash
